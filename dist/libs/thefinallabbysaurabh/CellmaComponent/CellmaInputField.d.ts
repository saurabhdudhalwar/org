import { ChangeEventHandler, ClipboardEventHandler, CSSProperties, FormEventHandler, KeyboardEventHandler, MouseEventHandler, ReactNode } from "react";
interface Props {
    rows?: string | number | undefined;
    minRows?: string | number | undefined;
    onClick?: MouseEventHandler<HTMLParagraphElement> | undefined;
    FormHelperText?: ReactNode;
    selected?: boolean;
    handleSelect?(): unknown;
    cancelField?: boolean;
    variant?: any;
    size?: any;
    errorText?: any;
    required?: boolean | undefined;
    label?: string | undefined;
    disabled?: any;
    onHandleChange?: ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> | undefined;
    onBlur?: any;
    value?: string | number | null;
    name?: string | undefined;
    type?: string | undefined;
    autoComplete?: any;
    onKeyDown?: KeyboardEventHandler<HTMLInputElement | HTMLTextAreaElement> | undefined;
    defaultValue?: unknown;
    placeholder?: string | undefined;
    multiline?: boolean | undefined;
    maxLength?: any;
    style?: CSSProperties | undefined;
    onInput?: FormEventHandler<HTMLDivElement> | undefined;
    onCopy?: ClipboardEventHandler<HTMLDivElement> | undefined;
    onPaste?: ClipboardEventHandler<HTMLDivElement> | undefined;
    onCut?: ClipboardEventHandler<HTMLDivElement> | undefined;
    onKeyPress?: KeyboardEventHandler<HTMLDivElement> | undefined;
    handleClick?: MouseEventHandler<HTMLButtonElement> | undefined;
    endIcon?: ReactNode;
    id?: any;
    inputProps?: any;
    autoFocus?: boolean | undefined;
    htmlFor?: any;
    ariaLabel?: any;
}
export declare const CellmaInputField: React.FC<Props>;
export default CellmaInputField;
